import { Configuration } from '../configuration';
import { App } from '../models/App';
import { CreateNotificationSuccessResponse } from '../models/CreateNotificationSuccessResponse';
import { CreateSegmentSuccessResponse } from '../models/CreateSegmentSuccessResponse';
import { ExportEventsSuccessResponse } from '../models/ExportEventsSuccessResponse';
import { ExportSubscriptionsRequestBody } from '../models/ExportSubscriptionsRequestBody';
import { ExportSubscriptionsSuccessResponse } from '../models/ExportSubscriptionsSuccessResponse';
import { GenericSuccessBoolResponse } from '../models/GenericSuccessBoolResponse';
import { GetNotificationHistoryRequestBody } from '../models/GetNotificationHistoryRequestBody';
import { GetSegmentsSuccessResponse } from '../models/GetSegmentsSuccessResponse';
import { Notification } from '../models/Notification';
import { NotificationHistorySuccessResponse } from '../models/NotificationHistorySuccessResponse';
import { NotificationSlice } from '../models/NotificationSlice';
import { NotificationWithMeta } from '../models/NotificationWithMeta';
import { OutcomesData } from '../models/OutcomesData';
import { PropertiesBody } from '../models/PropertiesBody';
import { Segment } from '../models/Segment';
import { SubscriptionBody } from '../models/SubscriptionBody';
import { TransferSubscriptionRequestBody } from '../models/TransferSubscriptionRequestBody';
import { UpdateLiveActivityRequest } from '../models/UpdateLiveActivityRequest';
import { UpdateLiveActivitySuccessResponse } from '../models/UpdateLiveActivitySuccessResponse';
import { UpdateUserRequest } from '../models/UpdateUserRequest';
import { User } from '../models/User';
import { UserIdentityBody } from '../models/UserIdentityBody';
import { DefaultApiRequestFactory, DefaultApiResponseProcessor } from "../apis/DefaultApi";
export interface DefaultApiCancelNotificationRequest {
    appId: string;
    notificationId: string;
}
export interface DefaultApiCreateAliasRequest {
    appId: string;
    aliasLabel: string;
    aliasId: string;
    userIdentityBody: UserIdentityBody;
}
export interface DefaultApiCreateAliasBySubscriptionRequest {
    appId: string;
    subscriptionId: string;
    userIdentityBody: UserIdentityBody;
}
export interface DefaultApiCreateAppRequest {
    app: App;
}
export interface DefaultApiCreateNotificationRequest {
    notification: Notification;
}
export interface DefaultApiCreateSegmentRequest {
    appId: string;
    segment?: Segment;
}
export interface DefaultApiCreateSubscriptionRequest {
    appId: string;
    aliasLabel: string;
    aliasId: string;
    subscriptionBody: SubscriptionBody;
}
export interface DefaultApiCreateUserRequest {
    appId: string;
    user: User;
}
export interface DefaultApiDeleteAliasRequest {
    appId: string;
    aliasLabel: string;
    aliasId: string;
    aliasLabelToDelete: string;
}
export interface DefaultApiDeleteSegmentRequest {
    appId: string;
    segmentId: string;
}
export interface DefaultApiDeleteSubscriptionRequest {
    appId: string;
    subscriptionId: string;
}
export interface DefaultApiDeleteUserRequest {
    appId: string;
    aliasLabel: string;
    aliasId: string;
}
export interface DefaultApiExportEventsRequest {
    notificationId: string;
    appId: string;
}
export interface DefaultApiExportSubscriptionsRequest {
    appId: string;
    exportSubscriptionsRequestBody?: ExportSubscriptionsRequestBody;
}
export interface DefaultApiGetAliasesRequest {
    appId: string;
    aliasLabel: string;
    aliasId: string;
}
export interface DefaultApiGetAliasesBySubscriptionRequest {
    appId: string;
    subscriptionId: string;
}
export interface DefaultApiGetAppRequest {
    appId: string;
}
export interface DefaultApiGetAppsRequest {
}
export interface DefaultApiGetNotificationRequest {
    appId: string;
    notificationId: string;
}
export interface DefaultApiGetNotificationHistoryRequest {
    notificationId: string;
    getNotificationHistoryRequestBody: GetNotificationHistoryRequestBody;
}
export interface DefaultApiGetNotificationsRequest {
    appId: string;
    limit?: number;
    offset?: number;
    kind?: 0 | 1 | 3;
}
export interface DefaultApiGetOutcomesRequest {
    appId: string;
    outcomeNames: string;
    outcomeNames2?: string;
    outcomeTimeRange?: string;
    outcomePlatforms?: string;
    outcomeAttribution?: string;
}
export interface DefaultApiGetSegmentsRequest {
    appId: string;
    offset?: number;
    limit?: number;
}
export interface DefaultApiGetUserRequest {
    appId: string;
    aliasLabel: string;
    aliasId: string;
}
export interface DefaultApiTransferSubscriptionRequest {
    appId: string;
    subscriptionId: string;
    transferSubscriptionRequestBody: TransferSubscriptionRequestBody;
}
export interface DefaultApiUnsubscribeEmailWithTokenRequest {
    appId: string;
    notificationId: string;
    token: string;
}
export interface DefaultApiUpdateAppRequest {
    appId: string;
    app: App;
}
export interface DefaultApiUpdateLiveActivityRequest {
    appId: string;
    activityId: string;
    updateLiveActivityRequest: UpdateLiveActivityRequest;
}
export interface DefaultApiUpdateSubscriptionRequest {
    appId: string;
    subscriptionId: string;
    subscriptionBody: SubscriptionBody;
}
export interface DefaultApiUpdateUserRequest {
    appId: string;
    aliasLabel: string;
    aliasId: string;
    updateUserRequest: UpdateUserRequest;
}
export declare class ObjectDefaultApi {
    private api;
    constructor(configuration: Configuration, requestFactory?: DefaultApiRequestFactory, responseProcessor?: DefaultApiResponseProcessor);
    cancelNotification(param: DefaultApiCancelNotificationRequest, options?: Configuration): Promise<GenericSuccessBoolResponse>;
    createAlias(param: DefaultApiCreateAliasRequest, options?: Configuration): Promise<UserIdentityBody>;
    createAliasBySubscription(param: DefaultApiCreateAliasBySubscriptionRequest, options?: Configuration): Promise<UserIdentityBody>;
    createApp(param: DefaultApiCreateAppRequest, options?: Configuration): Promise<App>;
    createNotification(param: DefaultApiCreateNotificationRequest, options?: Configuration): Promise<CreateNotificationSuccessResponse>;
    createSegment(param: DefaultApiCreateSegmentRequest, options?: Configuration): Promise<CreateSegmentSuccessResponse>;
    createSubscription(param: DefaultApiCreateSubscriptionRequest, options?: Configuration): Promise<SubscriptionBody>;
    createUser(param: DefaultApiCreateUserRequest, options?: Configuration): Promise<User>;
    deleteAlias(param: DefaultApiDeleteAliasRequest, options?: Configuration): Promise<UserIdentityBody>;
    deleteSegment(param: DefaultApiDeleteSegmentRequest, options?: Configuration): Promise<GenericSuccessBoolResponse>;
    deleteSubscription(param: DefaultApiDeleteSubscriptionRequest, options?: Configuration): Promise<void>;
    deleteUser(param: DefaultApiDeleteUserRequest, options?: Configuration): Promise<void>;
    exportEvents(param: DefaultApiExportEventsRequest, options?: Configuration): Promise<ExportEventsSuccessResponse>;
    exportSubscriptions(param: DefaultApiExportSubscriptionsRequest, options?: Configuration): Promise<ExportSubscriptionsSuccessResponse>;
    getAliases(param: DefaultApiGetAliasesRequest, options?: Configuration): Promise<UserIdentityBody>;
    getAliasesBySubscription(param: DefaultApiGetAliasesBySubscriptionRequest, options?: Configuration): Promise<UserIdentityBody>;
    getApp(param: DefaultApiGetAppRequest, options?: Configuration): Promise<App>;
    getApps(param?: DefaultApiGetAppsRequest, options?: Configuration): Promise<Array<App>>;
    getNotification(param: DefaultApiGetNotificationRequest, options?: Configuration): Promise<NotificationWithMeta>;
    getNotificationHistory(param: DefaultApiGetNotificationHistoryRequest, options?: Configuration): Promise<NotificationHistorySuccessResponse>;
    getNotifications(param: DefaultApiGetNotificationsRequest, options?: Configuration): Promise<NotificationSlice>;
    getOutcomes(param: DefaultApiGetOutcomesRequest, options?: Configuration): Promise<OutcomesData>;
    getSegments(param: DefaultApiGetSegmentsRequest, options?: Configuration): Promise<GetSegmentsSuccessResponse>;
    getUser(param: DefaultApiGetUserRequest, options?: Configuration): Promise<User>;
    transferSubscription(param: DefaultApiTransferSubscriptionRequest, options?: Configuration): Promise<UserIdentityBody>;
    unsubscribeEmailWithToken(param: DefaultApiUnsubscribeEmailWithTokenRequest, options?: Configuration): Promise<GenericSuccessBoolResponse>;
    updateApp(param: DefaultApiUpdateAppRequest, options?: Configuration): Promise<App>;
    updateLiveActivity(param: DefaultApiUpdateLiveActivityRequest, options?: Configuration): Promise<UpdateLiveActivitySuccessResponse>;
    updateSubscription(param: DefaultApiUpdateSubscriptionRequest, options?: Configuration): Promise<void>;
    updateUser(param: DefaultApiUpdateUserRequest, options?: Configuration): Promise<PropertiesBody>;
}
